{"version":3,"sources":["components/Header/ColorModeSwitcher.jsx","img/logo.svg","components/Header/Header.jsx","theme/icons/GenerateIcon.js","features/generateSlice.js","core/GeneratePassword.js","components/Main/GenerateInput.jsx","components/Main/GenerateCustomize.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","App.js","theme/breakpoints.js","theme/theme.js","theme/styles.js","theme/components/Container.js","theme/components/Heading.js","theme/config.js","index.js"],"names":["ColorModeSwitcher","useColorMode","colorMode","toggleColorMode","bgColor","borderRadius","isRound","color","icon","Sun","Moon","size","onClick","Header","as","bg","py","justifyContent","alignItems","src","logo","mr","GenerateIcon","fill","viewBox","d","generateSlice","createSlice","name","initialState","strategies","length","password","reducers","setPasswordLength","state","action","payload","setStrategies","setPassword","actions","GeneratePassword","passwordLength","dispatch","charsLower","value","status","charsUpper","symbols","numbers","strategy","i","lowerChar","shuffleLetters","slice","upperChar","symbolChar","numberChar","resultChars","push","str","a","split","j","Math","floor","random","tmp","join","GenerateInput","copy","boxShadow","iconColor","useState","reliabilityColor","setReliabilityColor","useSelector","generate","useDispatch","useEffect","mb","alignSelf","position","p","base","lg","height","w","border","h","fontSize","md","fontWeight","_focus","outline","text","top","transform","right","children","Copy","left","bottom","transition","GenerateCustomize","ass","sm","lineHeight","borderBottom","flexDirection","pr","flexBasis","textAlign","px","max","defaultValue","onChange","e","boxSize","colorScheme","direction","Main","toast","useToast","boxShadowBox","useColorModeValue","bgBox","copyToast","title","duration","isClosable","flex","maxW","mx","textTransform","Footer","ml","App","minH","breakpoints","createBreakpoints","theme","extendTheme","styles","global","body","fontFamily","components","Container","baseStyle","maxWidth","Heading","config","initialColorMode","useSystemColorMode","store","configureStore","reducer","generateReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bd5b433.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, IconButton, useColorMode } from \"@chakra-ui/react\";\r\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\r\n\r\nexport const ColorModeSwitcher = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box bgColor={\"#fff\"} borderRadius={\"50%\"}>\r\n      <IconButton\r\n        isRound={\"true\"}\r\n        color={\"#333\"}\r\n        icon={colorMode === \"light\" ? <SunIcon /> : <MoonIcon />}\r\n        size=\"lg\"\r\n        onClick={toggleColorMode}\r\n        aria-label={\"Change theme\"}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.8fa4140f.svg\";","import React from \"react\";\r\nimport { Box, Container, Flex, Image } from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\nimport logo from \"../../img/logo.svg\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Box as={\"header\"} bg={\"#3182ce\"} color={\"#000\"}>\r\n      <Container py={\"25px\"}>\r\n        <Flex justifyContent={\"space-between\"} alignItems={\"center\"}>\r\n          <Flex alignItems={\"center\"}>\r\n            <Image src={logo} mr={\"25px\"} />\r\n          </Flex>\r\n          <ColorModeSwitcher />\r\n        </Flex>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\n\r\nexport const GenerateIcon = ({ fill }) => {\r\n  return (\r\n    <Icon viewBox=\"0 0 24 24\" fill={fill}>\r\n      <path d=\"M7 9h-7v-7h1v5.2c1.853-4.237 6.083-7.2 11-7.2 6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.286 0-11.45-4.844-11.959-11h1.004c.506 5.603 5.221 10 10.955 10 6.071 0 11-4.929 11-11s-4.929-11-11-11c-4.66 0-8.647 2.904-10.249 7h5.249v1z\" />\r\n    </Icon>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const generateSlice = createSlice({\r\n  name: \"generate\",\r\n  initialState: {\r\n    strategies: [\"lowercase\", \"uppercase\"],\r\n    length: \"12\",\r\n    password: \"\",\r\n  },\r\n  reducers: {\r\n    setPasswordLength: (state, action) => {\r\n      state.length = action.payload;\r\n    },\r\n    setStrategies: (state, action) => {\r\n      state.strategies = action.payload;\r\n    },\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPasswordLength, setStrategies, setPassword } =\r\n  generateSlice.actions;\r\nexport default generateSlice.reducer;\r\n","import {setPassword} from \"../features/generateSlice\";\r\n\r\nexport const GeneratePassword = (strategies, passwordLength, dispatch) => {\r\n  const charsLower = {\r\n    value: \"abcdefghijklmnopqrstuvwxyz\",\r\n    status: false,\r\n  };\r\n  const charsUpper = {\r\n    value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n    status: false,\r\n  };\r\n  const symbols = {\r\n    value: \"+-_=/;><)(*&^%$#@!,.?|{}[]\",\r\n    status: false,\r\n  };\r\n  const numbers = {\r\n    value: \"0123456789\",\r\n    status: false,\r\n  };\r\n  const password = [];\r\n  \r\n  for (let strategy of strategies) {\r\n    if (strategy === \"lowercase\") {\r\n      charsLower.status = true;\r\n    } else if (strategy === \"uppercase\") {\r\n      charsUpper.status = true;\r\n    } else if (strategy === \"symbols\") {\r\n      symbols.status = true;\r\n    } else if (strategy === \"numbers\") {\r\n      numbers.status = true;\r\n    }\r\n  }\r\n  \r\n  for (let i = 0; i < passwordLength; i++) {\r\n    const lowerChar = charsLower.status\r\n      ? shuffleLetters(charsLower.value).slice(0, 10)\r\n      : \"\";\r\n    const upperChar = charsUpper.status\r\n      ? shuffleLetters(charsUpper.value).slice(0, 5)\r\n      : \"\";\r\n    const symbolChar = symbols.status\r\n      ? shuffleLetters(symbols.value).slice(0, 5)\r\n      : \"\";\r\n    const numberChar = numbers.status\r\n      ? shuffleLetters(numbers.value).slice(0, 5)\r\n      : \"\";\r\n    const resultChars = shuffleLetters(\r\n      lowerChar + upperChar + symbolChar + numberChar\r\n    )[0];\r\n    password.push(resultChars);\r\n  }\r\n  \r\n  function shuffleLetters(str) {\r\n    let a = str.split(\"\"),\r\n      n = a.length;\r\n    \r\n    for (let i = n - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      let tmp = a[i];\r\n      a[i] = a[j];\r\n      a[j] = tmp;\r\n    }\r\n    \r\n    return a.join(\"\");\r\n  }\r\n  \r\n  dispatch(setPassword(password.join(\"\")));\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n} from \"@chakra-ui/react\";\r\nimport { CopyIcon } from \"@chakra-ui/icons\";\r\nimport { GenerateIcon } from \"../../theme/icons/GenerateIcon\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\r\nimport {GeneratePassword} from \"../../core/GeneratePassword\";\r\n\r\nexport const GenerateInput = ({ copy, bg, boxShadow, iconColor }) => {\r\n  const [reliabilityColor, setReliabilityColor] = useState(\"\");\r\n  const password = useSelector((state) => state.generate.password);\r\n  const passwordLength = useSelector((state) => state.generate.length);\r\n  const strategies = useSelector((state) => state.generate.strategies);\r\n  const dispatch = useDispatch();\r\n\r\n  const reliabilityPassword = () => {\r\n    if (passwordLength >= 9) {\r\n      setReliabilityColor(\"green\");\r\n    } else if (passwordLength >= 5 && passwordLength < 9) {\r\n      setReliabilityColor(\"orange\");\r\n    } else {\r\n      setReliabilityColor(\"red\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reliabilityPassword();\r\n    GeneratePassword(strategies, passwordLength, dispatch);\r\n  }, [passwordLength, strategies]);\r\n\r\n  return (\r\n    <Box\r\n      bg={bg}\r\n      mb={\"30px\"}\r\n      alignSelf={\"center\"}\r\n      position={\"relative\"}\r\n      boxShadow={boxShadow}\r\n      p={{ base: \"8px\", lg: \"25px\" }}\r\n      height={{ base: \"80px\", lg: \"115px\" }}\r\n      w={\"100%\"}\r\n      border={\"1px solid rgba(55, 55, 55, 0.1)\"}\r\n    >\r\n      <InputGroup h={\"100%\"}>\r\n        <Input\r\n          fontSize={{ base: \"22px\", md: \"33px\" }}\r\n          fontWeight={700}\r\n          border={\"0\"}\r\n          h={\"100%\"}\r\n          p={\"8px 110px 8px 10px\"}\r\n          _focus={{ outline: 0 }}\r\n          value={password}\r\n        />\r\n        <CopyToClipboard text={password}>\r\n          <InputRightElement\r\n            top={\"50%\"}\r\n            transform={\"translateY(-50%)\"}\r\n            right={\"55px\"}\r\n            children={\r\n              <IconButton\r\n                onClick={copy}\r\n                size={\"lg\"}\r\n                icon={<CopyIcon color={iconColor} />}\r\n                aria-label={\"Copy\"}\r\n              />\r\n            }\r\n          />\r\n        </CopyToClipboard>\r\n        <InputRightElement\r\n          top={\"50%\"}\r\n          transform={\"translateY(-50%)\"}\r\n          children={\r\n            <IconButton\r\n              onClick={() => GeneratePassword(strategies, passwordLength, dispatch)}\r\n              size={\"lg\"}\r\n              icon={<GenerateIcon fill={iconColor} />}\r\n              aria-label={\"Copy\"}\r\n            />\r\n          }\r\n        />\r\n      </InputGroup>\r\n      <Box\r\n        position={\"absolute\"}\r\n        left={\"0\"}\r\n        bottom={\"0\"}\r\n        w={\"100%\"}\r\n        h={\"7px\"}\r\n        transition={\"background .2s ease-in-out\"}\r\n        bgColor={reliabilityColor}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  CheckboxGroup,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  Slider,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  SliderTrack,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setStrategies,\r\n  setPasswordLength,\r\n} from \"../../features/generateSlice\";\r\n\r\nexport const GenerateCustomize = ({ bg, boxShadow }) => {\r\n  const passwordLength = useSelector((state) => state.generate.length);\r\n  const strategies = useSelector((state) => state.generate.strategies);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box\r\n      bg={bg}\r\n      mb={\"30px\"}\r\n      alignSelf={\"center\"}\r\n      position={\"relative\"}\r\n      boxShadow={boxShadow}\r\n      p={\"25px\"}\r\n      w={\"100%\"}\r\n      border={\"1px solid rgba(55, 55, 55, 0.1)\"}\r\n    >\r\n      <Heading\r\n        ass={\"h3\"}\r\n        fontSize={{ base: \"18px\", sm: \"24px\" }}\r\n        fontWeight={\"700\"}\r\n        lineHeight={\"45px\"}\r\n        mb={\"25px\"}\r\n        borderBottom={\"2px solid #edeef0\"}\r\n      >\r\n        Customize your password\r\n      </Heading>\r\n      <Flex\r\n        w={\"100%\"}\r\n        justifyContent={\"space-between\"}\r\n        flexDirection={{ base: \"column\", lg: \"row\" }}\r\n      >\r\n        <Box w={\"100%\"} pr={\"30px\"} flexBasis={\"75%\"}>\r\n          <Box mb={\"15px\"}>Password Length</Box>\r\n          <Flex>\r\n            <Input\r\n              mr={\"30px\"}\r\n              textAlign={\"center\"}\r\n              lineHeight={\"1\"}\r\n              fontSize={\"16px\"}\r\n              p={\"5px\"}\r\n              px={\"0\"}\r\n              w={\"60px\"}\r\n              h={\"40px\"}\r\n              value={passwordLength}\r\n            />\r\n            <Slider\r\n              max={\"30\"}\r\n              aria-label=\"Change length\"\r\n              defaultValue={passwordLength}\r\n              onChange={(e) => dispatch(setPasswordLength(e))}\r\n            >\r\n              <SliderTrack>\r\n                <SliderFilledTrack />\r\n              </SliderTrack>\r\n              <SliderThumb boxSize={\"20px\"}>\r\n                <Box\r\n                  w={\"20px\"}\r\n                  h={\"100%\"}\r\n                  borderRadius={\"50%\"}\r\n                  bgColor=\"#3182ce\"\r\n                />\r\n              </SliderThumb>\r\n            </Slider>\r\n          </Flex>\r\n        </Box>\r\n\r\n        <Flex justifyContent={\"flex-end\"}>\r\n          <CheckboxGroup\r\n            colorScheme=\"blue\"\r\n            defaultValue={strategies}\r\n            flexBasis={\"50%\"}\r\n            onChange={(e) => dispatch(setStrategies(e))}\r\n          >\r\n            <Stack direction={\"column\"}>\r\n              <Checkbox size={\"lg\"} value=\"lowercase\">\r\n                Lowercase\r\n              </Checkbox>\r\n              <Checkbox size={\"lg\"} value=\"uppercase\">\r\n                Uppercase\r\n              </Checkbox>\r\n              <Checkbox size={\"lg\"} value=\"numbers\">\r\n                Numbers\r\n              </Checkbox>\r\n              <Checkbox size={\"lg\"} value=\"symbols\">\r\n                Symbols\r\n              </Checkbox>\r\n            </Stack>\r\n          </CheckboxGroup>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Flex,\r\n  Heading,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { GenerateInput } from \"./GenerateInput\";\r\nimport { GenerateCustomize } from \"./GenerateCustomize\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\r\n\r\nexport const Main = () => {\r\n  const toast = useToast();\r\n  const password = useSelector((state) => state.generate.password);\r\n  const boxShadowBox = useColorModeValue(\r\n    \"0px 6px 37px 9px rgba(34, 60, 80, 0.1)\",\r\n    \"none\"\r\n  );\r\n  const iconColor = useColorModeValue(\"#333\", \"#fff\");\r\n  const bgBox = useColorModeValue(\"#fff\", \"#2D3748\");\r\n\r\n  const copyToast = () => {\r\n    toast({\r\n      title: \"Copied!\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box as={\"main\"} flex={\"1 1 auto\"}>\r\n      <Container py={\"50px\"}>\r\n        <Flex maxW={\"800px\"} flexDirection={\"column\"} mx={\"auto\"}>\r\n          <Box textAlign={\"center\"} mb={\"35px\"} textTransform={\"uppercase\"}>\r\n            <Box\r\n              fontSize={{ base: \"12px\", sm: \"16px\" }}\r\n              mb={{ base: \"5px\", sm: \"0\" }}\r\n            >\r\n              password generator tool\r\n            </Box>\r\n            <Heading\r\n              as={\"h1\"}\r\n              fontWeight={\"900\"}\r\n              fontSize={{ base: \"18px\", sm: \"24px\", md: \"33px\" }}\r\n            >\r\n              password generator online\r\n            </Heading>\r\n          </Box>\r\n          <GenerateInput\r\n            copy={copyToast}\r\n            boxShadow={boxShadowBox}\r\n            bg={bgBox}\r\n            iconColor={iconColor}\r\n          />\r\n          <GenerateCustomize boxShadow={boxShadowBox} bg={bgBox} />\r\n          <CopyToClipboard text={password}>\r\n            <Button\r\n              borderRadius={\"30px\"}\r\n              w={\"200px\"}\r\n              h={\"50px\"}\r\n              fontSize={\"18px\"}\r\n              colorScheme={\"blue\"}\r\n              alignSelf={\"center\"}\r\n              onClick={copyToast}\r\n            >\r\n              Copy password\r\n            </Button>\r\n          </CopyToClipboard>\r\n        </Flex>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Container, Text } from \"@chakra-ui/react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Box as={\"footer\"}>\r\n      <Container>\r\n        <Text\r\n          py={\"30px\"}\r\n          textAlign={\"center\"}\r\n          fontSize={\"13px\"}\r\n          fontWeight={\"300\"}\r\n        >\r\n          CopyRight{\" \"}\r\n          <Box ml={\"5px\"} as={\"span\"}>\r\n            &#169; 2021\r\n          </Box>\r\n        </Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import { Header } from \"./components/Header/Header\";\r\nimport { Main } from \"./components/Main/Main\";\r\nimport { Footer } from \"./components/Footer/Footer\";\r\nimport { Flex, useColorModeValue } from \"@chakra-ui/react\";\r\n\r\nfunction App() {\r\n  const color = useColorModeValue(\"#333\", \"#fff\");\r\n\r\n  return (\r\n    <Flex flexDirection={\"column\"} minH={\"100vh\"} color={color}>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createBreakpoints } from \"@chakra-ui/theme-tools\";\r\n\r\nexport const breakpoints = createBreakpoints({\r\n  sm: \"430px\",\r\n  md: \"560px\",\r\n  lg: \"768px\",\r\n});\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\nimport Container from \"./components/Container\";\r\nimport styles from \"./styles\";\r\nimport Heading from \"./components/Heading\";\r\nimport config from \"./config\";\r\nimport { breakpoints } from \"./breakpoints\";\r\n\r\nexport const theme = extendTheme({\r\n  styles,\r\n  components: {\r\n    Container,\r\n    Heading,\r\n  },\r\n  config,\r\n  breakpoints,\r\n});\r\n","export default {\r\n  global: {\r\n    body: {\r\n      fontFamily: \"Lato, sans-serif\",\r\n      fontSize: \"18px\",\r\n      lineHeight: \"1.5\",\r\n    },\r\n  },\r\n};\r\n","export default {\r\n  baseStyle: {\r\n    maxWidth: \"1230px\",\r\n  },\r\n};\r\n","export default {\r\n  baseStyle: {\r\n    fontFamily: \"inherit\",\r\n  },\r\n};\r\n","export default {\r\n  initialColorMode: \"light\",\r\n  useSystemColorMode: false,\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\r\nimport { theme } from \"./theme/theme\";\r\nimport { Provider } from \"react-redux\";\r\nimport generateReducer from \"./features/generateSlice\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    generate: generateReducer,\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ChakraProvider theme={theme}>\r\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n        <App />\r\n      </ChakraProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}